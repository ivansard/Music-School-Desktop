/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import domain.Course;
import domain.LessonType;
import domain.Professor;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import logic.Controller;
import session.Session;
import tableModels.CourseWithLessonsTableModel;

/**
 *
 * @author Ivan
 */
public class FUpdateDeleteCourse extends javax.swing.JDialog {

    /**
     * Creates new form FUpdateDeleteCourse
     */
    public FUpdateDeleteCourse(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        populateComboBoxProfessor();
        populateFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlblTitle = new javax.swing.JLabel();
        jbtnAddLesson = new javax.swing.JButton();
        jtxtTitle = new javax.swing.JTextField();
        jbtnRemoveLesson = new javax.swing.JButton();
        jtxtPrice = new javax.swing.JTextField();
        jlblPrice = new javax.swing.JLabel();
        jlblDuration = new javax.swing.JLabel();
        jtxtDuration = new javax.swing.JTextField();
        jlblProfessor = new javax.swing.JLabel();
        jComboBoxSelectProfessor = new javax.swing.JComboBox<>();
        jbtnSelectProfessor = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblLessons = new javax.swing.JTable();
        jbtnEditCourse = new javax.swing.JButton();
        jbtnUpdateCourse = new javax.swing.JButton();
        jbtnDeleteCourse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alter course");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jlblTitle.setText("Title");

        jbtnAddLesson.setText("+");
        jbtnAddLesson.setEnabled(false);
        jbtnAddLesson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddLessonActionPerformed(evt);
            }
        });

        jtxtTitle.setEditable(false);
        jtxtTitle.setText(" ");

        jbtnRemoveLesson.setText("-");
        jbtnRemoveLesson.setEnabled(false);
        jbtnRemoveLesson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRemoveLessonActionPerformed(evt);
            }
        });

        jtxtPrice.setEditable(false);

        jlblPrice.setText("Price");

        jlblDuration.setText("Duration (min)");

        jtxtDuration.setEditable(false);
        jtxtDuration.setText(" ");

        jlblProfessor.setText("Professor");

        jComboBoxSelectProfessor.setEditable(true);
        jComboBoxSelectProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSelectProfessorActionPerformed(evt);
            }
        });

        jbtnSelectProfessor.setText("Select");
        jbtnSelectProfessor.setEnabled(false);
        jbtnSelectProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSelectProfessorActionPerformed(evt);
            }
        });

        jtblLessons.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lesson Number", "Name", "Duration", "Tablature", "Type"
            }
        ));
        jScrollPane1.setViewportView(jtblLessons);

        jbtnEditCourse.setText("EDIT");
        jbtnEditCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditCourseActionPerformed(evt);
            }
        });

        jbtnUpdateCourse.setText("UPDATE");
        jbtnUpdateCourse.setEnabled(false);
        jbtnUpdateCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUpdateCourseActionPerformed(evt);
            }
        });

        jbtnDeleteCourse.setText("DELETE");
        jbtnDeleteCourse.setEnabled(false);
        jbtnDeleteCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteCourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jbtnRemoveLesson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbtnAddLesson, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlblPrice)
                                    .addComponent(jlblTitle)
                                    .addComponent(jlblProfessor)
                                    .addComponent(jlblDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jComboBoxSelectProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)
                                        .addComponent(jbtnSelectProfessor))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jtxtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jtxtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jtxtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jbtnEditCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jbtnUpdateCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jbtnDeleteCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblTitle)
                    .addComponent(jtxtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblPrice)
                    .addComponent(jtxtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblDuration)
                    .addComponent(jtxtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblProfessor)
                    .addComponent(jComboBoxSelectProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnSelectProfessor))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jbtnAddLesson)
                        .addGap(30, 30, 30)
                        .addComponent(jbtnRemoveLesson)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnEditCourse)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtnUpdateCourse)
                        .addComponent(jbtnDeleteCourse)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnAddLessonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddLessonActionPerformed
        CourseWithLessonsTableModel ctm = (CourseWithLessonsTableModel) jtblLessons.getModel();
        ctm.addNewRow();
        jtxtDuration.setText(ctm.getCurrentDuration() + "");
    }//GEN-LAST:event_jbtnAddLessonActionPerformed

    private void jbtnRemoveLessonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRemoveLessonActionPerformed
        int selectedLesson = jtblLessons.getSelectedRow();
        if (selectedLesson > -1) {
            CourseWithLessonsTableModel ctm = (CourseWithLessonsTableModel) jtblLessons.getModel();
            ctm.removeSelectedRow(selectedLesson);
            jtxtDuration.setText(ctm.getCurrentDuration() + "");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a lesson in order to delete!");
        }

    }//GEN-LAST:event_jbtnRemoveLessonActionPerformed

    private void jComboBoxSelectProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSelectProfessorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSelectProfessorActionPerformed

    private void jbtnSelectProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSelectProfessorActionPerformed
        JDialog jdSearchProf = new FSearchProfessor(null, true);
        jdSearchProf.setVisible(true);
    }//GEN-LAST:event_jbtnSelectProfessorActionPerformed

    private void jbtnEditCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditCourseActionPerformed
        prepareFormForEditing();
    }//GEN-LAST:event_jbtnEditCourseActionPerformed

    private void jbtnDeleteCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteCourseActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this course?", "Confirm",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            Course courseToDelete = (Course) Session.getInstance().getMap().get("selected_course");
            Controller.deleteCourse(courseToDelete);
            JOptionPane.showMessageDialog(this, "Successful deletion of course!");
//            Session.getInstance().getMap().put("deleted_course", courseToDelete);
            this.dispose();
        }
    }//GEN-LAST:event_jbtnDeleteCourseActionPerformed

    private void jbtnUpdateCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUpdateCourseActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to update this course?", "Confirm",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            CourseWithLessonsTableModel cwtltm = (CourseWithLessonsTableModel) jtblLessons.getModel();
            Course courseToUpdate = cwtltm.getCourse();

            Professor professor = (Professor) jComboBoxSelectProfessor.getSelectedItem();
            courseToUpdate.setProfessor(professor);
            System.out.println(professor.getName() + " " + professor.getSurname());
            courseToUpdate.setPrice(Double.parseDouble(jtxtPrice.getText()));
            courseToUpdate.setName(jtxtTitle.getText());
            courseToUpdate.setDuration(Integer.parseInt(jtxtDuration.getText()));

            Course updatedCourse = Controller.updateCourse(courseToUpdate);
            Session.getInstance().getMap().put("updated_course", updatedCourse);
            if (updatedCourse != null) {
                JOptionPane.showMessageDialog(this, "Successful insertion of course!");
            } else {
                JOptionPane.showMessageDialog(this, "Issue inserting course!");
            }
            this.dispose();
        }
    }//GEN-LAST:event_jbtnUpdateCourseActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        Professor selectedProf = (Professor) Session.getInstance().getMap().get("selected_prof");
        if (selectedProf != null) {
            jComboBoxSelectProfessor.setSelectedItem(selectedProf);
        }
        Session.getInstance().getMap().remove("selected_prof");
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Object> jComboBoxSelectProfessor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnAddLesson;
    private javax.swing.JButton jbtnDeleteCourse;
    private javax.swing.JButton jbtnEditCourse;
    private javax.swing.JButton jbtnRemoveLesson;
    private javax.swing.JButton jbtnSelectProfessor;
    private javax.swing.JButton jbtnUpdateCourse;
    private javax.swing.JLabel jlblDuration;
    private javax.swing.JLabel jlblPrice;
    private javax.swing.JLabel jlblProfessor;
    private javax.swing.JLabel jlblTitle;
    private javax.swing.JTable jtblLessons;
    private javax.swing.JTextField jtxtDuration;
    private javax.swing.JTextField jtxtPrice;
    private javax.swing.JTextField jtxtTitle;
    // End of variables declaration//GEN-END:variables

    public void populateComboBoxProfessor() {
        List<Professor> professors = Controller.getInstance().getAllProfessors();
        for (Professor professor : professors) {
            jComboBoxSelectProfessor.addItem(professor);
        }
        jComboBoxSelectProfessor.setSelectedItem(null);
    }

    private void setLessonTableMyModel() {
        Course course = (Course) Session.getInstance().getMap().get("selected_course");

        CourseWithLessonsTableModel ctm = new CourseWithLessonsTableModel(course);
        jtblLessons.setModel(ctm);

        LessonType[] lessonTypes = LessonType.values();
        JComboBox comboLessonType = new JComboBox(new DefaultComboBoxModel(lessonTypes));

        TableColumnModel colModel = jtblLessons.getColumnModel();
        TableColumn colLessonType = colModel.getColumn(4);
        colLessonType.setCellEditor(new DefaultCellEditor(comboLessonType));
    }

    private void populateFields() {
        Course selectedCourse = (Course) Session.getInstance().getMap().get("selected_course");
        if (selectedCourse != null) {
            jtxtTitle.setText(selectedCourse.getName());
            jtxtPrice.setText(selectedCourse.getPrice() + "");
            jtxtDuration.setText(selectedCourse.getDuration() + "");
            jComboBoxSelectProfessor.setSelectedItem(selectedCourse.getProfessor());

            setLessonTableMyModel();

        }
    }

    private void prepareFormForEditing() {
        jtxtTitle.setEditable(true);
        jtxtDuration.setEditable(true);
        jtxtPrice.setEditable(true);
        jComboBoxSelectProfessor.setEditable(true);
        jbtnAddLesson.setEnabled(true);
        jbtnRemoveLesson.setEnabled(true);
        jbtnDeleteCourse.setEnabled(true);
        jbtnUpdateCourse.setEnabled(true);
        jbtnSelectProfessor.setEnabled(true);

        jbtnEditCourse.setEnabled(false);
    }
}
